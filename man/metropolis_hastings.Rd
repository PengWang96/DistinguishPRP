% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/my_posterior.R
\name{metropolis_hastings}
\alias{metropolis_hastings}
\title{Compute Posteriorâˆ’PRP under distinguishability criterion using Metropolis-Hastings MCMC Algorithm}
\usage{
metropolis_hastings(
  N,
  r,
  m,
  hat_beta,
  hat_sigma_sq,
  test = "Q",
  side = "one.side",
  heterogeneity_level = NULL,
  k_vec = NULL
)
}
\arguments{
\item{N}{Integer. Total number of iterations in the Metropolis-Hastings algorithm.}

\item{r}{Numeric. Burn-in ratio, representing the proportion of iterations to discard as burn-in (e.g., \code{0.05}).}

\item{m}{Integer. Number of replications for test statistics.}

\item{hat_beta}{Numeric vector. The original or simulated estimated effects.}

\item{hat_sigma_sq}{Numeric vector. The squared standard errors corresponding to the estimated effects in \code{hat_beta}.}

\item{test}{Character. Type of test statistic to use. Options are \code{"Q"} (heterogeneity test) or \code{"Egger"} (Egger's regression test).}

\item{side}{Character. Type of hypothesis test to perform. Options are \code{"one.side"} (one-tailed) or \code{"two.side"} (two-tailed).}

\item{heterogeneity_level}{Numeric (optional). If provided, specifies a fixed tolerable level of heterogeneity to override \code{k_vec}.}

\item{k_vec}{Numeric vector (optional). A precomputed vector of \code{k} values, representing heterogeneity levels corresponding to a range of misclassification probabilities (\code{P_mis}) from 0 to 0.05.
If \code{k_vec} is provided, it will be used for sampling during MCMC.
Example generation: \verb{pvec <- c(10^seq(-10, log10(0.05), 0.01), 0.05); k_vec <- sapply(pvec, inverse_P_mis)}.}
}
\value{
A list containing the following elements:
\item{p_value}{Numeric. The computed p-value for the test.}
\item{bar_beta}{Numeric vector. The estimated posterior means for each iteration of MCMC.}
\item{acception}{Numeric. The acceptance rate of the Metropolis-Hastings algorithm.}
}
\description{
This function computes the posterior probability under the distinguishability criterion
using the Metropolis-Hastings algorithm for Markov Chain Monte Carlo (MCMC) simulations.
It is designed to test hypotheses of replicability with tolerable heterogeneity levels.
}
\details{
This function implements a Metropolis-Hastings algorithm to sample from the posterior
distribution of the model parameters under the distinguishability criterion.
If \code{k_vec} is not provided, the function will throw an error, as it requires precomputed heterogeneity levels.

The \code{heterogeneity_level} parameter, if specified, overrides the use of \code{k_vec} for sampling the heterogeneity levels.
In such cases, a fixed \code{k} corresponding to the given heterogeneity level will be used throughout the simulation.
}
\examples{
# Generate k_vec using a logarithmic sequence
pvec <- c(10^seq(-10, log10(0.05), 0.01), 0.05)
k_vec <- sapply(pvec, inverse_P_mis)

# Run the Metropolis-Hastings MCMC
result <- metropolis_hastings(
  N = 10000,
  r = 0.05,
  m = 2,
  hat_beta = c(0.4, 0.6),
  hat_sigma_sq = c(0.1, 0.2),
  k_vec = k_vec
)

# Print results
print(result$p_value)
}
